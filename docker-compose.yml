version: '3'
services:

    db:
      image: postgres:10.3
      container_name: hello-postgres
      ports:
        - "5432"
      env_file: env
      volumes:
        - ./docker-utils/postgresql/:/docker-entrypoint-initdb.d
      networks:
        - main

    app:
      build:
        context: .
        dockerfile: Dockerfile
      container_name: hello-app
      command: /site/docker-utils/app-start.sh
      volumes:
        - .:/site/proj/
        - static-volume:/site/htdocs/static/
      ports:
        - "8000"
      environment:
        - DATABASE_URL=postgres://postgres@db/postgres
        - SITE_DIR=/site/
        - PROJECT_NAME=hello
        - DJANGO_DEBUG=True
      networks:
        - main

    web:
      image: nginx:1.11
      container_name: hello-web
      ports:
        - "80:80"
        - "443:443"
      depends_on:
        - app
      volumes:
        - ./docker-utils/nginx/default.template.conf:/root/default.template.conf
        - ./docker-utils/ssl/:/site/ssl/
        - static-volume:/static
      command: /bin/bash -c "envsubst '$$NGINX_HTTP_PORT $$NGINX_HTTPS_PORT' < /root/default.template.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
      environment:
        - NGINX_HOST=hello.local
        - NGINX_HTTP_PORT=80
        - NGINX_HTTPS_PORT=443
      networks:
        - main

    rabbitmq:
      image: rabbitmq:3
      container_name: hello-rabbitmq
      expose:
        - "5672"
      environment:
        - RABBITMQ_DEFAULT_USER=guest
        - RABBITMQ_DEFAULT_PASS=guest
      networks:
        - main

    worker:
      build:
        context: .
        dockerfile: Dockerfile
      container_name: hello-worker
      command: /site/env/bin/celery worker -A landing --workdir /site/proj/src/ -l info
      volumes:
        - .:/site/proj/
        - static-volume:/site/htdocs/static/
      environment:
        - DATABASE_URL=postgres://postgres@db/postgres
        - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
        - SITE_DIR=/site/
        - PROJECT_NAME=hello
        - DJANGO_DEBUG=False
      depends_on:
        - rabbitmq
      networks:
        - main

networks:
  main:

volumes:
  static-volume:
